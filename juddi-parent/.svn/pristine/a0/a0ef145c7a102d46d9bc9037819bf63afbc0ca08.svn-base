# Copyright 2001-2009 The Apache Software Foundation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###############################################################################
#
# Load Test Profile Configuration
#
# Define the load test cases to be run in parallel per XLT agent.
#
# Format:
#
#   com.xceptance.xlt.loadtests.<testID>.<setting> = <value>
#
# For "<testID>" use any proper name. The supported values for "<setting>" are:
#
#   class ............... the test class name
#   users ............... the number of threads that run the test in parallel (REQUIRED)
#   iterations .......... the number of iterations per thread
#   arrivalRate ......... the number of transactions per hour
#   initialDelay ........ the number of seconds to wait at the beginning
#   warmUpPeriod ........ the number of seconds to run without performing measurements
#   measurementPeriod ... the number of seconds to perform measurements (REQUIRED)
#   shutdownPeriod ...... the number of seconds to continue without performing measurements
#   rampUpPeriod ........ the number of seconds to steadily increase the user count
#   rampUpStepSize ...... the number of users to step-wise increase the load during ramp-up
#
# The "arrivalRate" value influences the way the load is generated. If omitted,
# the system generates a constant load based on the number of concurrent users.
# If specified, the system generates load with a cluster-wide constant arrival
# rate. In the latter case, the maximum load is limited by the number of
# concurrent users. Note that an arrival rate is only supported for
# non-iteration based load tests.
#
# The following figure shows the relationship between the various settings:
#
#     : initialDelay :   warmUpPeriod   : measurementPeriod : shutdownPeriod :	
#     :              :                  :                   :                :
#     /\             :                  :                   :                :
#   L |              :                  :                   :                :
#   o |              :                  :                   :                :
#   a |              :                **************************************** 
#   d |              :            ****:
#     |              :        ****    :
#     |              :    ****        :
#     |              :****            :
#     +--------------*----------------------------------------------------------->
#     :              :                :                                      Time
#     : initialDelay :  rampUpPeriod  :
#
# The "warmUpPeriod" is the time we will give the load to level out before
# taking measurements, and starts directly after the "initialDelay". This is
# done to minimize discrepancies that could be caused by applications and other
# systems starting up and not yet operating at an optimal level. Once this time
# has elapsed, the stable load will be measured during the "measurementPeriod".
# To ensure a constant load until the very end of the measurement period, a
# "shutdownPeriod" can be set in which the users will continue to run before
# stopping abruptly. The "rampUpPeriod" setting is independent of the 
# "warmUpPeriod", "measurementPeriod", "shutdownPeriod" settings and dictates
# the time that it will take for the load to increase to 100% after the initial
# delay. 
#
# All time period values can be specified in one of the following formats:
#   - total number of seconds
#     examples: '1234s' or '1234'
#   - natural style
#     examples: '0h 12m 0s', '0h 12m', '12m 0s' or '12m'
#   - digit style
#     examples: '1:23', '01:23', '0:1:23' or '0:01:23' 
#
################################################################################

## The list of active test cases.
#com.xceptance.xlt.loadtests = TRegisterBusiness
#com.xceptance.xlt.loadtests = TFindBusinessByName
#com.xceptance.xlt.loadtests = TSearchableLimit
#com.xceptance.xlt.loadtests = TSearchableLimitStaticAuthToken
com.xceptance.xlt.loadtests = TRegisterBusinessPT TFindBusinessPT TDeleteBusinessPT

## The default load test settings for all test cases. These global settings may
## be overridden by test case specific values. See below.
#com.xceptance.xlt.loadtests.default.users = 50
#com.xceptance.xlt.loadtests.default.iterations = 2000
#com.xceptance.xlt.loadtests.default.arrivalRate = 28125
com.xceptance.xlt.loadtests.default.rampUpPeriod = 120s
#com.xceptance.xlt.loadtests.default.rampUpStepSize = 1
#com.xceptance.xlt.loadtests.default.initialDelay = 0
com.xceptance.xlt.loadtests.default.warmUpPeriod = 130s
com.xceptance.xlt.loadtests.default.measurementPeriod = 45m
com.xceptance.xlt.loadtests.default.shutdownPeriod = 30s


## Test case specific configuration.
com.xceptance.xlt.loadtests.TRegisterBusinessPT.users = 100 
com.xceptance.xlt.loadtests.TRegisterBusinessPT.arrivalRate = 2000

com.xceptance.xlt.loadtests.TFindBusinessPT.users = 100
com.xceptance.xlt.loadtests.TFindBusinessPT.arrivalRate = 2000

com.xceptance.xlt.loadtests.TDeleteBusinessPT.users = 100
com.xceptance.xlt.loadtests.TDeleteBusinessPT.arrivalRate = 2000

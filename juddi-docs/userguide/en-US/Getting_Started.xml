<?xml version='1.0'?>
<!--
 * Copyright 2001-2009 The Apache Software Foundation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */ -->

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "jUDDI_User_Guide.ent">
%BOOK_ENTITIES;
]>

<!-- chapter: Getting Started -->
<chapter id="chap-Getting_Started">
    <title>Getting Started</title>
    
    <!-- section: What Should I Download? -->
    <section id="sect-what_should_I_download">
        <title>What Should I Download?</title>
        <para>
        The jUDDI server deploys as a WebARchive (war) named <filename>juddiv3.war</filename>. Within jUDDI,
        there are three downloadable files (<filename>juddi-core.jar</filename>, <filename>juddi.war</filename>, and
        <filename>juddi-tomcat.zip</filename>). You should determine which one to use depending on what level
        of integration you want with your application and your platform / server choices.
        </para>
        <para>
        JUDDI also ships with client side code, the <filename>juddi-client.jar</filename>. The jUDDI server
        depends on the <filename>juddi-client.jar</filename> in situations where one server communicates to
        another server. In this setup one server acts as a client to the other server. The
        juddi-client.
        </para>
    </section>
    
    <!-- section: Using the JAR -->
    <section id="sect-using_the_jar">
        <title>Using the JAR</title>
        <para>
        The juddi-core module produces a JAR which contains the jUDDI source and a jUDDI
        persistence.xml configuration. jUDDI's persistence is being actively tested with
        both OpenJPA and with Hibernate. If you are going to use only the JAR, you would
        need to directly insert objects into jUDDI through the database back end or
        persistence layer, or configure your own Web Service provider with the provided
        WSDL files and classes.
        </para>
    </section>
    
    <!-- section: Using the WAR File -->
    <section id="sect-using_the_WAR_file">
        <title>Using the WAR File</title>
        <para>
        As with the JAR, you need to make a decision on what framework you would like to
        use when building the WAR. jUDDI's architecture supports any JAX-WS compliant WS
        stack (Axis, CXF, etc). The jUDDI 3.0.GA release ships with CXF in the Tomcat
        bundle, but any docs or descriptors to support other WS stacks would be welcome
        contributions. Simply copy the WAR to the deploy folder of your server (this
        release has been tested under Apache Tomcat 6.0.20), start your server, and follow
        the directions under “using jUDDI as a Web Service”.
        </para>
    </section>
    
    <!-- section: Using the Tomcat Bundle -->
    <section id="sect-using_the_tomcat_bundle">
        <title>Using the Tomcat Bundle</title>
        <para>
        The jUDDI Tomcat bundle packages up the jUDDI WAR, Apache Derby, and a few
        necessary configuration files and provides the user with a pre-configured jUDDI
        instance. By default, Hibernate is used as the persistence layer and CXF is used
        as a Web Service framework. To get started using the Tomcat bundle, unzip the
        <filename>juddi-tomcat-bundle.zip</filename>, and start Tomcat :
        </para>
    
        <screen><xi:include href="extras/Getting_Started_1.screen" parse="text" xmlns:xi="http://www.w3.org/2001/XInclude" /></screen>

        <para>
        It is suggested that you use JDK 1.6 with the Tomcat 6 bundle. On Mac OS X you can
        either change your JAVA_HOME settings or use 
        <filename>/Applications/Utilities/Java Preferences.app</filename> to change your 
        current JDK.
        </para>
    
        <para>
        Once the server is up and running can make sure the root data was properly
        installed by browsing to <ulink url="http://localhost:8080/juddiv3"/>
        </para>
        
        <para>
        You should see the screen show in <xref linkend="fig-jUDDI_welcome" />.
        </para>
    
        <!-- figure: jUDDI Welcome Page -->
        <figure id="fig-jUDDI_welcome">
            <title>jUDDI Welcome Page</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/jUDDI_welcome.png" scalefit="1"/>
                </imageobject>
                <textobject>
                    <phrase>jUDDI Welcome Page</phrase>
                </textobject>
            </mediaobject>
        </figure>

    </section>

    <!-- section: Using jUDDI Web Services -->
    <section id="sect-Using_jUDDI_webservices">
        <title>Using jUDDI Web Services</title>
        <para>
        Once the jUDDI server is started, you can inspect the UDDI WebService API by 
        browsing to <ulink url="http://localhost:8080/juddiv3/services"/>
        </para>
    
        <para>
        You should see an overview of all the Services and their WSDLs.
        </para>
    
        <!-- figure: UDDI Services Overview -->
        <figure id="fig-UDDI_services_overview">
            <title>UDDI Services Overview</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/UDDI_services_overview.png" scalefit="1"/>
                </imageobject>
                <textobject>
                    <phrase>UDDI Services Overview</phrase>
                </textobject>
            </mediaobject>
        </figure>

        <para>
        The services page shows you the available endpoints and methods available. Using
        any SOAP client, you should be able to send some sample requests to jUDDI to test:
        </para>
    
        <!-- figure: Getting an authToken using SoapUI -->
        <figure id="fig-getting_authToken_soapUI">
            <title>Getting an authToken using SoapUI</title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="images/authToken_SoapUI.png" scalefit="1"/>
                </imageobject>
                <textobject>
                    <phrase>Getting an authToken using SoapUI</phrase>
                </textobject>
            </mediaobject>
        </figure>
        
    </section>
    


    
    
    
</chapter>
